{"ast":null,"code":"var _jsxFileName = \"/Users/cmarshall/Development/RedditYearInReview/reddit-year-in-review-ui/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { ThemeProvider } from \"styled-components\";\nimport { useThemeToggle } from \"../hooks\";\n\nconst App = (_ref) => {\n  let {\n    Component\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"Component\"]);\n\n  const [theme, toggleTheme] = useThemeToggle();\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: toggleTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"theme me\"), __jsx(Component, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/cmarshall/Development/RedditYearInReview/reddit-year-in-review-ui/pages/_app.js"],"names":["ThemeProvider","useThemeToggle","App","Component","props","theme","toggleTheme"],"mappings":";;;;;;;;;;AAAA,SAASA,aAAT,QAA8B,mBAA9B;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,GAAG,GAAG,UAA6B;AAAA,MAA5B;AAAEC,IAAAA;AAAF,GAA4B;AAAA,MAAZC,KAAY;;AACvC,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBL,cAAc,EAA3C;AAEA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEI,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,SAAD,eAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,CADF;AAMD,CATD;;AAWA,eAAeF,GAAf","sourcesContent":["import { ThemeProvider } from \"styled-components\";\nimport { useThemeToggle } from \"../hooks\";\n\nconst App = ({ Component, ...props }) => {\n  const [theme, toggleTheme] = useThemeToggle();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <button onClick={toggleTheme}>theme me</button>\n      <Component {...props} />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}